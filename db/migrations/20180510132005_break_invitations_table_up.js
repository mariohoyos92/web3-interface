exports.up = function(knex, Promise) {
  return Promise.all([
    knex.schema.dropTable("invitations"),
    knex.schema.createTable("patientinvitation", table => {
      table
        .increments("id")
        .unsigned()
        .primary();
      table
        .string("email")
        .unique()
        .notNullable();
      table.string("invitation_code").notNullable();
      table.integer("profile_id").nullable();
      table.integer("inviter_id").notNullable();
      table.integer("count").nullable();
      table
        .boolean("confirmed")
        .notNullable()
        .defaultTo(false);
      table
        .integer("expire_seconds")
        .notNullable()
        .defaultTo(600);
      table
        .timestamp("created_at")
        .notNullable()
        .defaultTo(knex.raw("now()"));
      table.timestamp("updated_at").nullable();
      table.timestamp("deleted_at").nullable();
    }),
    knex.schema.createTable("hospitalinvitation", table => {
      table
        .increments("id")
        .unsigned()
        .primary();
      table
        .string("email")
        .unique()
        .notNullable();
      table.string("invitation_code").notNullable();
      table.integer("profile_id").nullable();
      table.integer("inviter_id").notNullable();
      table.integer("hospital_id").notNullable();
      table.integer("count").nullable();
      table.boolean("admin").notNullable();
      table.boolean("nonAdmin").notNullable();
      table
        .boolean("confirmed")
        .notNullable()
        .defaultTo(false);
      table
        .integer("expire_seconds")
        .notNullable()
        .defaultTo(600);
      table
        .timestamp("created_at")
        .notNullable()
        .defaultTo(knex.raw("now()"));
      table.timestamp("updated_at").nullable();
      table.timestamp("deleted_at").nullable();
    }),
    knex.schema.createTable("pharmacyinvitation", table => {
      table
        .increments("id")
        .unsigned()
        .primary();
      table
        .string("email")
        .unique()
        .notNullable();
      table.string("invitation_code").notNullable();
      table.integer("profile_id").nullable();
      table.integer("inviter_id").notNullable();
      table.integer("pharmacy_id").notNullable();
      table.integer("count").nullable();
      table.boolean("admin").notNullable();
      table.boolean("nonAdmin").notNullable();
      table
        .boolean("confirmed")
        .notNullable()
        .defaultTo(false);
      table
        .integer("expire_seconds")
        .notNullable()
        .defaultTo(600);
      table
        .timestamp("created_at")
        .notNullable()
        .defaultTo(knex.raw("now()"));
      table.timestamp("updated_at").nullable();
      table.timestamp("deleted_at").nullable();
    }),
    knex.schema.createTable("deainvitation", table => {
      table
        .increments("id")
        .unsigned()
        .primary();
      table
        .string("email")
        .unique()
        .notNullable();
      table.string("invitation_code").notNullable();
      table.integer("profile_id").nullable();
      table.integer("inviter_id").notNullable();
      table.integer("deaorg_id").notNullable();
      table.integer("count").nullable();
      table.boolean("admin").notNullable();
      table.boolean("nonAdmin").notNullable();
      table
        .boolean("confirmed")
        .notNullable()
        .defaultTo(false);
      table
        .integer("expire_seconds")
        .notNullable()
        .defaultTo(600);
      table
        .timestamp("created_at")
        .notNullable()
        .defaultTo(knex.raw("now()"));
      table.timestamp("updated_at").nullable();
      table.timestamp("deleted_at").nullable();
    })
  ]);
};

exports.down = function(knex, Promise) {
  return Promise.all([
    knex.schema.createTable("invitations", table => {
      table
        .increments("id")
        .unsigned()
        .primary();
      table
        .string("email")
        .unique()
        .notNullable();
      table.integer("count").nullable();
      table
        .boolean("admin")
        .notNullable()
        .defaultTo(false);
      table
        .boolean("confirmed")
        .notNullable()
        .defaultTo(false);
      table
        .integer("expire_seconds")
        .notNullable()
        .defaultTo(600);
      table
        .timestamp("created_at")
        .notNullable()
        .defaultTo(knex.raw("now()"));
      table.timestamp("updated_at").nullable();
      table.timestamp("deleted_at").nullable();
    }),
    knex.schema.dropTable("patientinvitation"),
    knex.schema.dropTable("hospitalinvitation"),
    knex.schema.dropTable("pharmacyinvitation"),
    knex.schema.dropTable("deainvitation")
  ]);
};
